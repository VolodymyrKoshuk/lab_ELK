#!/bin/bash

echo "--------------------Start---------------------"
# Set variables to script
USERNAME="ElkTop"
PUBKEY="${pub_key}"
LOGCONF='${conf_log}'

# Add the user to the system with no password for root access
useradd -m -s /bin/bash $USERNAME 
usermod -aG wheel $USERNAME
echo "$USERNAME ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/$USERNAME

# Create the .ssh directory and authorized_keys file
mkdir -p /home/$USERNAME/.ssh
touch /home/$USERNAME/.ssh/authorized_keys

# Add the public key to the authorized_keys file
echo $PUBKEY >> /home/$USERNAME/.ssh/authorized_keys

# Set the correct permissions on the .ssh directory and authorized_keys file
chmod 700 /home/$USERNAME/.ssh
chmod 600 /home/$USERNAME/.ssh/authorized_keys

# Set the ownership of the .ssh directory and authorized_keys file to the new user
chown -R $USERNAME:$USERNAME /home/$USERNAME/.ssh

sed -i 's/^PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config 
systemctl restart sshd.service

#Install Git, NMAP, Docker and start Docker
yum update -y
yum install -y git nmap htop
amazon-linux-extras install docker -y
systemctl start docker
systemctl enable docker

# Install Docker Compose
curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

# Verify installation
docker-compose --version

# Add user to Docker group
usermod -aG docker $USERNAME

# Install Nginx
amazon-linux-extras install nginx1.12 -y

# Start Nginx service
systemctl start nginx
systemctl enable nginx

# Create and move in folder project
mkdir /home/$USERNAME/elk_project
cd /home/$USERNAME/elk_project

# Init docker project from github and set the ownership 
git clone https://github.com/caas/docker-elk.git
chown -R ElkTop:ElkTop /home/$USERNAME/elk_project/

# Runing docker compose with ELK stack
cd /home/$USERNAME/elk_project/docker-elk && docker-compose up -d

echo "--------------------Finish---------------------"